项目结构是按照应用分目录的。
每个目录代表一个应用，并且属于自己特有的名字空间。现约定，命名空间==应用名==目录名【连大小写都相同】
Util目录收录各种孤魂野鬼或者那种被叫做Utility的组件，它们被所有的应用重用。
Xml目录是XMLParser解析文档的结果数据结构的定义。
Control目录收录用户界面组件的包装库，所有应用的View部分都使用Control目录里面的组件构建自己的界面。
UIEngineer目录里面是界面引擎库，暂时优先级很低。
inc目录里面是整个系统依赖的外部库的头文件，按照外部库的不同分别放在不同的子目录下。
lib目录里面是整个系统依赖的外部库文件，按照外部库的不同分别放在不同的子目录下。

每个应用目录里面一般可以区分为三个子目录，一个是Data，一个是Logical，一个是View，其中，
Data部分是该引用的永久化信息和信息的获取、查询、统计、排序等功能，它们一般依赖于Util目录
下的Data组件
Logical是应用程序的主要的核心和业务逻辑的实现，是我们现阶段主要的工作任务，
它们一般依赖于Util目录下的FSM，StringOp，ImageOperator，XMLParser，Log等组件。
如果发现Logical里面的组件在别的应用中也有可能使用，那么就提取出来放在Util目录里。
View是应用程序的外观，它表现Logical的功能给使用者，Logical也有状态改变需要通知View去展现。
它会使用Control目录里面的组件组织起自己的界面

每一个应用可以按照自己的组件是属于Data、Logical还是View把自己放到对应的namespace中。
